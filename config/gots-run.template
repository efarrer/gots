#!/bin/bash -e
if [ "$1" == "-stop" ]; then
  TS_AUTHKEY="" docker compose stop
  exit 0
fi

if ! tailscale status --json | jq '.Peer | to_entries[] | .value | .HostName  | contains("{{.DockerHostname}}")' | grep true > /dev/null; then
  if [ -z "$TS_AUTHKEY" ]; then
    echo "TS_AUTHKEY environment variable must be set when creating {{.DockerHostname}}."
    exit 9 # Magic number that is used to know if we need to set TS_AUTHKEY (see main.go)
  fi
fi

if [ "{{.Type}}" == "go" ]; then
  pushd "{{.WorkDir}}"
    go build {{.GoCompilePathSafe}}
  popd
fi

if [ "{{.Type}}" == "go" ]; then
  if [ ! -e "./{{.ExecName}}" ]; then
    cp "{{.WorkDir}}/{{.ExecName}}" ./
  fi
fi

# Note that this builds the Dockerfile in the source directory not the one that we generate for Go programs
if [ "{{.Type}}" == "dockerfile" ]; then
  pushd "{{.WorkDir}}"
    docker build --network=host -t {{.DockerImage}} .
  popd
fi

if [ "{{.Type}}" == "go" ]; then
  docker build --network=host -t {{.DockerImage}} .
fi

docker compose stop

docker compose up -d
